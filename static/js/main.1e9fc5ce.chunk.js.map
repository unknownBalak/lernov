{"version":3,"sources":["features/counter/Counter.module.css","features/counter/counterSlice.js","components/Nav.jsx","components/Home.jsx","components/Cards.jsx","components/Footer.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","Header","className","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","eventKey","Component","Home","Container","Row","Col","xs","md","Button","Table","striped","bordered","hover","Cards","sm","Image","src","this","props","thumbnail","Footer","App","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e9fc5ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1d2ZK\",\"value\":\"Counter_value__18pyg\",\"button\":\"Counter_button__4xcl0\",\"textbox\":\"Counter_textbox__2Ue34\",\"asyncButton\":\"Counter_asyncButton__b8tXZ Counter_button__4xcl0\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import React, { Component } from 'react'\r\nimport { Nav,Form,NavDropdown,Navbar, FormControl, Button } from 'react-bootstrap'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport './css/Nav.css'\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className='fluid'>\r\n <div className='container'>\r\n <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <Navbar.Brand href=\"#home\">Lernov</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#features\">Why Us</Nav.Link>\r\n    </Nav>\r\n    <Nav>\r\n      <Nav.Link href=\"#\">\r\n          <AccountCircleIcon className='sign-in' /> Sign-in</Nav.Link>\r\n      <Nav.Link eventKey={2} href=\"#memes\">\r\n          <PersonIcon className='sign-in'/>\r\n        Sign-Up\r\n      </Nav.Link>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n</div>\r\n</div>\r\n        )\r\n    }\r\n}\r\nexport default Header\r\n\r\n","import React, { Component } from 'react'\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { Container, Row , Col,Table } from 'react-bootstrap'\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport './css/Home.css'\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n        <Container>\r\n            <Row className='home'>\r\n                <Col className='background-img 'xs={12}  md={8}>\r\n      <h3>Bootcamp Quality at 1/10 of the Cost</h3>\r\n       <p>Lernov is the worldâ€™s fastest, most efficient way to master the skills tech companies want.\r\n            100% online, part-time & self-paced.</p>\r\n            <Button className='bg__button'>Know More </Button>                    \r\n                </Col>\r\n                <Col className='lornov-feature'xs={12} md={4}>\r\n                       <Table striped bordered hover className='home__table' > \r\n                       <thead>\r\n                           <tr className='table_tr row__header'>\r\n                              <td></td>\r\n                               <td className='table_td1'>Lernov</td>\r\n                               <td className='table_td2'>Others</td>\r\n                           </tr>\r\n                           </thead> \r\n\r\n                           <tr className='table_tr'>\r\n                               <td className='table_td0'>Learn by Doing</td>\r\n                               <td className='table_td1'><DoneIcon /> </td>\r\n                               <td className='table_td2'><ClearIcon  /></td>\r\n                           </tr>\r\n                          \r\n                          \r\n                           <tr className='table_tr'>\r\n                               <td className='table_td0'>Learn by Doing</td>\r\n                               <td className='table_td1'><DoneIcon /> </td>\r\n                               <td className='table_td2'><ClearIcon  /></td>\r\n                           </tr> \r\n                           <tr className='table_tr'>\r\n                               <td className='table_td0'>Learn by Doing</td>\r\n                               <td className='table_td1'><DoneIcon /> </td>\r\n                               <td className='table_td2'><ClearIcon  /></td>\r\n                           </tr> \r\n                           <tr className='table_tr'>\r\n                               <td className='table_td0'>Learn by Doing</td>\r\n                               <td className='table_td1'><DoneIcon /> </td>\r\n                               <td className='table_td2'><ClearIcon  /></td>\r\n                           </tr> \r\n                           <tr className='table_tr'>\r\n                               <td className='table_td0'>Learn by Doing</td>\r\n                               <td className='table_td1'><DoneIcon /> </td>\r\n                               <td className='table_td2'><ClearIcon  /></td>\r\n                           </tr> \r\n                           <tr className='table_tr'>\r\n                               <td className='table_td0'>Learn by Doing</td>\r\n                               <td className='table_td1'><DoneIcon /> </td>\r\n                               <td className='table_td2'><ClearIcon  /></td>\r\n                           </tr> \r\n                           <tr className='table_tr'>\r\n                               <td className='table_td0'>Learn by Doing</td>\r\n                               <td className='table_td1'><DoneIcon /> </td>\r\n                               <td className='table_td2'><ClearIcon  /></td>\r\n                           </tr> \r\n                           <tr className='table_tr'>\r\n                               <td className='table_td0'>Learn by Doing</td>\r\n                               <td className='table_td1'><DoneIcon /> </td>\r\n                               <td className='table_td2'><ClearIcon  /></td>\r\n                           </tr> \r\n                          \r\n                       </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from \"react\";\r\nimport \"./css/Card.css\";\r\nimport { Image, Container, Row, Col, Table } from \"react-bootstrap\";\r\n\r\nclass Cards extends Component {\r\n  render() {\r\n    return (\r\n      <Col className=\"lernov_courses\" md={3} sm={6} xs={12}>\r\n        <Image className=\"image\" src={this.props.src} thumbnail />\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component } from 'react'\r\nimport './css/Footer.css'\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className='footer'>\r\n                <strong>Lernov</strong> India &copy; 2020\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport { Counter } from './features/counter/Counter';\r\nimport Header from './components/Nav.jsx';\r\nimport Home from './components/Home.jsx';\r\nimport Cards from './components/Cards.jsx';\r\nimport Footer from './components/Footer.jsx';\r\nimport './App.css' \r\nimport { Container } from 'react-bootstrap';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Header />\r\n  {/* Home page*/}\r\n  <Home />\r\n  <Container className='lernov__card'> \r\n   <Cards src='https://via.placeholder.com/250'/>     {/* Courses  */}\r\n   <Cards src='https://via.placeholder.com/250'/>     {/* Courses  */}\r\n   <Cards src='https://via.placeholder.com/250'/>     {/* Courses  */}\r\n   <Cards src='https://via.placeholder.com/250'/>     {/* Courses  */}\r\n   <Cards src='https://via.placeholder.com/250'/>     {/* Courses  */}\r\n   <Cards src='https://via.placeholder.com/250'/>     {/* Courses  */}\r\n   <Cards src='https://via.placeholder.com/250'/>     {/* Courses  */}\r\n   <Cards src='https://via.placeholder.com/250'/>     {/* Courses  */}\r\n    \r\n    </Container> \r\n   <Footer />\r\n    </div>\r\n \r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}